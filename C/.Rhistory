f_X<-function(x){
if (x>=-1 & x<=1){
return(1.5*x^2)
} else {
0
}
}
F_X<-function(x){
if (x< -1){
0
} else {
if (x>=-1 & x<=1){
return(1.5*(x^3/3 + 1/3))
} else {
1
}
}
}
dens<-NULL
Dist<-NULL
for (i in seq(-2,2,by=0.01)){
dens<-c(dens,f_X(i))
Dist<-c(Dist,F_X(i))
}
plot(seq(-2,2,by=0.01),dens,type="l")
plot(seq(-2,2,by=0.01),Dist,type="l")
sim<-function(u){
if (u>=0.5){
x<-(2*u-1)^(1/3)
} else {
x<--(1-2*u)^(1/3)
}
return(x)
}
sim<-function(u){
if (u>=0.5){
x<-(2*u-1)^(1/3)
} else {
x<--(1-2*u)^(1/3)
}
return(x)
}
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
lines(seq(-2,2,by=0.01),dens,type="l",col="red")
sim<-function(u){
x<-(2*u-1)^(1/3)
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
lines(seq(-2,2,by=0.01),dens,type="l",col="red")
f_X<-function(x){
if (x>=0 & x<=1){
return(3/2*(1-x^2))
} else {
0
}
}
F_X<-function(x){
if (x< 0){
0
} else {
if (x>=0 & x<=1){
return(0.5*(3*x- x^3))
} else {
1
}
}
}
dens<-NULL
Dist<-NULL
for (i in seq(-2,2,by=0.01)){
dens<-c(dens,f_X(i))
Dist<-c(Dist,F_X(i))
}
plot(seq(-2,2,by=0.01),dens,type="l")
plot(seq(-2,2,by=0.01),Dist,type="l")
plot(seq(-2,2,by=0.01),Dist,type="l")
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
lines(seq(-2,2,by=0.01),dens,type="l",col="red")
sim<-function(u){
if (u>=0.5){
x<-((u^(2)-1-u)^(1/2))^(1/3)+ 1/((u^(2)-1-u)^(1/2))^(1/3)
} else {
x<-((u^(2)-1-u)^(1/2))^(1/3)+ 1/((u^(2)-1-u)^(1/2))^(1/3)
}
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
sim<-function(u){
if (u>=0.5){
x<-((u^(2)-1-u)^(1/2))^(1/3)+ 1/((u^(2)-1-u)^(1/2))^(1/3)
} else {
x<-((u^(2)-1-u)^(1/2))^(1/3)+ 1/((u^(2)-1-u)^(1/2))^(1/3)
}
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
sim<-function(u){
x<-(2*u-1)^(1/3)
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
lines(seq(-2,2,by=0.01),dens,type="l",col="red")
###Algoritmo para simular
sim<-function(u){
if (u>=0.5){
x<-(2*u-1)^(1/3)
} else {
x<- -(1-2*u)^(1/3)
}
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
lines(seq(-2,2,by=0.01),dens,type="l",col="red")
##### EJEMPLO 1: SIMULACION DE UNA DENSIDAD#####
###Funci?n de masa  y de distribuci?n de probabilidad
f_X<-function(x){
if (x>=-1 & x<=1){
return(1.5*x^2)
} else {
0
}
}
F_X<-function(x){
if (x< -1){
0
} else {
if (x>=-1 & x<=1){
return(1.5*(x^3/3 + 1/3))
} else {
1
}
}
}
###Gr?ficos
dens<-NULL
Dist<-NULL
for (i in seq(-2,2,by=0.01)){
dens<-c(dens,f_X(i))
Dist<-c(Dist,F_X(i))
}
plot(seq(-2,2,by=0.01),dens,type="l")
plot(seq(-2,2,by=0.01),Dist,type="l")
###Algoritmo para simular
sim<-function(u){
if (u>=0.5){
x<-(2*u-1)^(1/3)
} else {
x<- -(1-2*u)^(1/3)
}
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
lines(seq(-2,2,by=0.01),dens,type="l",col="red")
##### EJEMPLO 1: SIMULACION DE UNA DENSIDAD#####
###Funci?n de masa  y de distribuci?n de probabilidad
f_X<-function(x){
if (x>=-1 & x<=1){
return(1.5*x^2)
} else {
0
}
}
F_X<-function(x){
if (x< -1){
0
} else {
if (x>=-1 & x<=1){
return(1.5*(x^3/3 + 1/3))
} else {
1
}
}
}
###Gr?ficos
dens<-NULL
Dist<-NULL
for (i in seq(-2,2,by=0.01)){
dens<-c(dens,f_X(i))
Dist<-c(Dist,F_X(i))
}
plot(seq(-2,2,by=0.01),dens,type="l")
plot(seq(-2,2,by=0.01),Dist,type="l")
###Algoritmo para simular
sim<-function(u){
x<-(2*u-1)^(1/3)
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
lines(seq(-2,2,by=0.01),dens,type="l",col="red")
##### Parte C#5: SIMULACION DE UNA DENSIDAD#####
###Función de masa  y de distribución de probabilidad
f_X<-function(x){
if (x>=0 & x<=1){
return(3/2*(1-x^2))
} else {
0
}
}
F_X<-function(x){
if (x< 0){
0
} else {
if (x>=0 & x<=1){
return(0.5*(3*x- x^3))
} else {
1
}
}
}
###Graficos
dens<-NULL
Dist<-NULL
for (i in seq(-2,2,by=0.01)){
dens<-c(dens,f_X(i))
Dist<-c(Dist,F_X(i))
}
plot(seq(-2,2,by=0.01),dens,type="l")
plot(seq(-2,2,by=0.01),Dist,type="l")
###Algoritmo para simular INVERSA DE LA FUNCIÓN DE DISTRIBUCIÓN
sim<-function(u){
if (u>=0.5){
x<- ((u^(2)-1-u)^(1/2))^(1/3)+ 1/((u^(2)-1-u)^(1/2))^(1/3)
} else {
x<- -(((u^(2)+1+u)^(1/2))^(1/3)+ (-1/((u^(2)-1-u)^(1/2))^(1/3)))
}
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
##### Parte C#5: SIMULACION DE UNA DENSIDAD#####
###Función de masa  y de distribución de probabilidad
f_X<-function(x){
if (x>=0 & x<=1){
return(3/2*(1-x^2))
} else {
0
}
}
F_X<-function(x){
if (x< 0){
0
} else {
if (x>=0 & x<=1){
return(0.5*(3*x- x^3))
} else {
1
}
}
}
###Graficos
dens<-NULL
Dist<-NULL
for (i in seq(-2,2,by=0.01)){
dens<-c(dens,f_X(i))
Dist<-c(Dist,F_X(i))
}
plot(seq(-2,2,by=0.01),dens,type="l")
plot(seq(-2,2,by=0.01),Dist,type="l")
###Algoritmo para simular INVERSA DE LA FUNCIÓN DE DISTRIBUCIÓN
sim<-function(u){
if((u^(2)-1-u)<0){
x<- ((-(-u^(2)+1+u)^(1/2)))^(1/3)+ 1/((-(-u^(2)+1+u)^(1/2))^(1/3))
}else{
x<- (((u^(2)-1-u)^(1/2)))^(1/3)+ 1/(((u^(2)-1-u)^(1/2))^(1/3))
}
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
sim<-function(u){
if((u^(2)-1-u)<0){
x<- ((-(-u^(2)+1+u)^(1/2)))^(1/3)+ 1/((-(-u^(2)+1+u)^(1/2))^(1/3))
}else{
x<- ((-u+(u^(2)-1)^(1/2)))^(1/3)+ 1/((-u+(u^(2)-1)^(1/2))^(1/3))
}
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
hist(vector_x,prob=TRUE)
sim<-function(u){
x<- ((-u+(u^(2)-1)^(1/2)))^(1/3)+ 1/((-u+(u^(2)-1)^(1/2))^(1/3))
return(x)
}
###Simulaci?n de 10000 realizaciones
vector_u<-runif(10000)
vector_x<-NULL
for (j in 1:10000){
vector_x[j]<-sim(vector_u[j])
}
